name: GitHub Pages

on:
  push:
    branches:
      - main  # Set a branch to deploy
      - beta
      - production
  pull_request:

jobs:
  deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive  # Fetch Hugo themes (true OR recursive)
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-

      - name: Install autoprexir
        run: npm install autoprefixer -D --save --ignore-scripts

      - name: Install postcss-cli
        run: npm install -D --save postcss-cli

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCS_HUGO_SA_CREDENTIALS }}'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0'

      - name: 'Use gcloud CLI'
        run: 'gcloud info'

      - name: Build
        run: hugo --minify

      - name: Deploy
        run: hugo deploy --target="hugo-gcs" --invalidateCDN --maxDeletes -1

      - name: Notify Slack
         uses: 8398a7/action-slack@v3
         if: always() # Pick up events even if the job fails or is canceled.
         env:
           SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
           MATRIX_CONTEXT: ${{ toJson(matrix) }} # required
         with:
           channel: documentation
           username: 'test'
           status: ${{ job.status }}
           fields: workflow,job,commit,repo,ref,author,took
         custom_payload: |
           {
             attachments: [{
               color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
               text: `Build and Deploy of Documentation by ${process.env.AS_AUTHOR} ${{ job.status }} after ${process.env.AS_TOOK}`,
             }]
           }
